	01 시큐리티

허용된 사용자만이 특정 웹 페이지에 접근할 수 있도록 제한하는 보안기능이다.
사용자가 권한이 없는 데이터에 접근하는 것을 막거나 웹 공격자가 전송데이터를 중간에 가로채는 것을 방지하는 등 중요한 역할을 한다.
	
	인증 (Authentication)
	
사용자가 웹 브라우저를 사용하여 웹 페이지에 접근할 때 JSP 컨테이너는 요청된 페이지에 보안 제약이 있는지 확인하고 
사용자에게 사용자의 이름과 암호를 확인하여 수행한다.

	권한 부여 (Authorization)
	
특정 사용자가 해당 페이지에 접근할 수 있는지 확인하여 승인한다.


	1.1 시큐리티 처리방법
	
웹 어플리케이션을 보안하는 방법은 다음과 같다.

	
	시큐리티 처리 방법		설명
	
	선언적 시큐리티		코드 작성 없이 web.xml 파일에 보안 구성을 작성하여 사용자의 인증을 수행하는 방식
	
	프로그래밍 시큐리티	request 내장 객체의 메소드를 통해 사용자의 권한 부여를 처리하는 프로그램 방식
	

	1.2 웹 서버에 역할과 사용자 구성
	
웹 어플리케이션의 인증과 권한 부여를 위해 톰캣 서버에 사용자와 역할을 쉽게 생성하고 구성할 수 있다.
톰캣 서버에 인증 정보가 저장되는 장소는 '/설치된	톰캣의 루트/conf/' 폴터 내의 tomcat-users.xml 파일로,
다음과 같은 형식으로 사용자와 역할이 구성되어 있다. 또는 이클립스 내에 웹 어플리케이션과 톰캣 서버 간에 연동하기 위해 생성한 Server 프로젝트
내의 tomcat-users.xml 파일에 사용자와 역할이 구성되어 있다. tomcat-users.xml 파일에서 
주석 부분 (<!-- -->) 을 해제해야 기존에 설정된 역할과 사용자를 사용하거나 해로운 역할을 추가할 수 있다.


	<tomcat-users>
	   ...(생략)...
	    <role rolename="manager"/>
		<role rolename="test1"/>
		<user usernmae="admin" password="123" roles="manager"/>
		<user usernmae="test1" password="456" roles="test1"/>
		<user usernmae="both" password="both" roles="manager,test1"/>
	</tomcat-users>
	
	
tomcat-users.xml 파일에 설정되어 있는 내용은 살펴보면, 2개의 역할 manager, test1을 가지고
사용자 admin, test1, both이 서로 다른 역할이 매핑된다. 이때 사용자 both은 2개의 역할 manager, test1에 매핑된다.