out 객체는 JSP 페이지가 생성된 결과를 웹 브라우저에 전송해 주는 출력 스트림으로, JSP 페이지가 웹 브라우저로 보내는 모든 정보는 out 객체를 통해서 전송된다.
여기서 모든 정보라 하면 JSP 스크립트 요소뿐만 아니라 비 스크립트 요소인 HTML과 일반 텍스트도 모두 포함된다.
out 객체는 javax.servlet.jsp.JspWriter 클래스 타입으로 JSP 에서는 out 객체로 사용된다. 주로 많이 사용되는 메소드는 웹 브라우저에 출력할 때 사용되는 println() 메소드이다.

<%
	String str = "JSP";
	out.println(str);		// out 객체가 제공하는 화면 출력 메소드
%>

표현식(<%=문장%>)과 out.println()는 둘 다 브라우저에 출력시키는 똑같은 역할을 수행한다. 다만 JSP 페이지에서 개발자들에게 편의성을 제공하기 위해서 <%=문장%> 부분은 out.println(문장)으로 변환되어 실행된다.
표현식(<%=문장%>)은 스크립트릿(<%%>) 안에 쓸 수 없다. 대신 스크립트릿(<%%>) 안에서 어떠한 내용을 웹 브라우저에 출력하고 싶다면 그때는 out.println()을 사용해야 한다.
out 기본 객체는 출력 버퍼와도 밀접한 관련이 있는데, 사실 JSP 페이지가 사용하는 출력 버퍼는 out 기본 객체가 내부적으로 사용하는 버퍼이다.
다음의 표는 out 내장 객체가 제공하는 메소드들 중 사용 빈도가 높은 것들이다.


메소드					설명

boolean isAutoFlush()	출력 버퍼가 다 찼을 때 처리 여부를 결정하는 것으로, 자동으로 플러시(출랙해서 비우기)할 경우에는 true를 리턴하고, 그렇지 않을 경우 false를 리턴한다.

int getBufferSize()		출력 버퍼의 전체 크기를 리턴한다.

int getRemaining()		현재 남아 있는 출력 버퍼의 크기를 리턴한다.

void clearBuffer()		현재 출력 버퍼에 저장되어 있는 내용을 웹 브라우저에 전송하지 않고 비운다.

String println(str)		주어진 str 값을 웹 브라우저에 출력한다. 이때 줄 바꿈은 적용되지 않는다.

void flush()			현재 출력 버퍼에 저장되어 있는 내용을 웹 브라우저에 전송하고 비운다.

void close()			현재 출력 버퍼에 저장되어 있는 내용을 웹 브라우저에 전송하고 출력 스트림을 닫는다.


이 예제는 out 객체의 메소드를 사용한 것이다.

outTest.jsp		155쪽