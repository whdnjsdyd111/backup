회원 관리 시스템 중 회원을 인증하는 예제를 작성해보며 세션을 사용한 정보 유지 방법을 이해해 보자.

	- 세션을 사용한 회원 인증 시스템의 구조
	
	┌───────────────────┐
	│	sessionLogin.jsp│
	├───────────────────┤	로그아웃		┌───────────────────┐
	│	환영 메시지			│───────────>	│		로그아웃		│
	│	(인증된 사용자)		│<──────┐		│(sessionLogout.jsp	│
	├───────────────────┤		│		└───────────────────┘
	│	회원 인증 폼			│		│
	│	(인증되지 않은 사용자)	│	   인증 성공
	└───────────────────┘		│
	입력된	│			^		│
	회원 정보	└─────┐		│		│
				  V	    인증 실패		│
				┌───────────────────────┐
				│		회원 인증 처리		│
				│ (sessionLoginPro.jsp)	│
				└───────────────────────┘
입력된 정보를 가지고 LogonDBBean	│	^
객체의 userCheck() 메소드 호출		V	│	result 리턴
				┌───────────────────────┐
				│	LogonDBBean			│
				│		(DB 처리빈)		│
				└───────────────────────┘
							^
							│
							V
							
						    DB		member 테이블
						    
						    
이 예제는 인증된 사용자일 경우 환영 메시지를 표시하고, 인증되지 않은 사용자일 경우 회원 인증 폼이 표시되는 sessionLogin.jsp 페이지, 회원 인증을 처리하는 sessionLoginPro.jsp 페이지,
로그아웃을 해 세션을 무효화하는 sessionLogout.jsp 페이지를 작성하는 것이다. 이때 sessionLoginPro.jsp 페이지는 자바빈인 LogonDBBean을 사용해서 DB와 연동하며, 
사용자 인증에 필요한 정보는 member 테이블에 있다.

LogonDBBean.java			404쪽

인증 안 된 sessionLogin.jsp		407쪽

sessionLoginPro.jsp			408쪽

인증된 viewSession.jsp	

sessionLogout.jsp			410쪽