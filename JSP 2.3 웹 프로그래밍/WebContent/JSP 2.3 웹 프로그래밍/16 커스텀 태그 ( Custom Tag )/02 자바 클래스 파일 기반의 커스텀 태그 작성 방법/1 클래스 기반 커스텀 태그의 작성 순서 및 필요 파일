이 방식을 사용하려면 태그의 로직을 기술하는 자바 클래스 파일인 태그 핸들러(TagHandler)를 작성하며, 태그 라이브러리 참조를 설정하는 태그 라이브러리 디스크립터 파일(.tld), 
JSP 페이지에서 태그 라이브러리 디스크립터(tld) 파일을 사용할 수 있도록 설정하는 web.xml 그리고 태그 라이브러리를 사용하는 JSP 페이지가 필요하다.


(1) 작성 순서

자바 클래스 파일 기반의 태그 라이브러리를 사용하는 커스텀 태그를 작성해야 할 경우 필요한 파일들의 작성 순서는 다음과 같다.

	커스텀 태그 정의		자바 클래스 파일을	JSP 페이지에서	커스텀 태그 사용
	(구조, 로직)		태그로 사용할 수	사용할 수 있도록	
					있도록 등록		TDL 파일 등록	
				←			←			←
	자바 클래스 파일		TLD 파일		web.xml		JSP 페이지
				→			→			→

				
1	커스텀 태그를 정의하는 자바 파일을 작성한다.

2	자바의 클래스를 커스텀 태그로 사용하기 위해 TLD(Tag Library Descriptor) 파일에 등록(정의)한다.

3	JSP 페이지에서 해당 커스텀 태그를 사용할 수 있도록 web.xml에 등록한다.

4	JSP 페이지에서 해당 커스텀 태그를 사용한다.


(2) 작성 파일의 위치

1) 태그 핸들러

실제 서비스 환경에서는 [웹 애플리케이션 폴더] - [WEB-INF] - [classes] 폴더 안에 위치하고, 이클립스 가상 환경에서는 [프로젝트] - [build] 내에 위치한다.
이 [build] 내용은 이클립스 버전에 따라 볼 수 없는 경우도 있다. 따라서 이클립스 가상 환경에서는 [프로젝트] - [src] - [패키지] 내에 자바 파일(.java)을 작성하면 알아서 컴파일되어
컴파일의 위치를 신경쓰지 않아도 된다. 모든 자바 로직 파일(서블릿 포함)은 이 위치에서 작성한다.

2) 태그 라이브러리 디스크립터 파일(.tld)

실제 환경에서는 [웹 애플리케이션 폴더] - [WEB-INF] - [tlds] 폴더 안에 위치하고, 이클립스 가상 환경에서는 [프로젝트] - [WebContent] - [WEB-INF] - [tlds] 내에 위치한다.

3) web.xml 파일

실제 환경에서는 [웹 애플리케이션 폴더] - [WEB-INF] - [tlds] 폴더 안에 위치하고, 이클립스 가상 환경에서는 [프로젝트] - [WebContent] - [WEB-INF] - [tlds] 내에 위치한다.

4) JSP 페이지

실제 서비스 환경에서는 [웹 애플리켕션 폴더] 안에 위치하고, 이클립스 가상 환경에서는 [프로젝트] - [WebContent]에 위치한다.


(3) 주요 파일 작성 방법

주요 파일에 대한 예시를 작성하는 경우를 위해 [ch16] 폴더를 생성하고 [WebContent] - [WEB-INF] 폴더에 [tlds] 폴더를 생성한다.

1) 태그 핸들러(Tag Handler) 태그의 로직을 기술하는 자바 클래스 파일

WelcomeTag.java		648쪽

2) 태그 라이브러리 디스크립터 파일(.tld) 태그 라이브러리 참조 설정 파일

welcomeTag.tld		649쪽

3) web.xml 파일 수정 JSP 페이지에서 태그 라이브러리 디스크립터(tld) 파일을 사용 설정

[WEB-INF]의 web.xml 파일을 수정한다.		650쪽

4) JSP 페이지 : 태그 라이브러리 사용

welcomeTag.jsp		651쪽

