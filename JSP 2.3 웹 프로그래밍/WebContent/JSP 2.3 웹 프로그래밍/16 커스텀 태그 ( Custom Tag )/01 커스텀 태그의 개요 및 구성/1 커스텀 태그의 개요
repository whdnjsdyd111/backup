표준 커스텀 태그인 JSTL에서 제공하지 않는 태그는 사용자가 직접 만들어 써야 하는데, 이를 커스텀 태그라 한다. 
커스텀 태그는 JSTL에서 제공하지 않는 이외의 작업을 JSP의 스크립트를 사용하지 않고 태그 기반에서 간결하게 프로그래밍하기 위해 꼭 필요하다.
사용자가 직접 태그를 만들어 사용하는 이 커스텀 태그는 JSP의 핵심 기술 중 하나라고 할 수 있다. JSP 스텍에서도 이것을 구현하는 기술에 관한 내용이 많은 부분을 차지하며,
자주 사용하는 커스텀 태그의 표준인 JSTL까지 지원한다. 이것은 다른 웹 프로그래밍 언어인 ASP나 PHP 등에서는 찾아 볼 수 없는 핵심 기술이기도 하다.
앞에서 JSTL의 학습을 통해 JSP 스크립트 (<% %>) (<%= %>) (<%! %>) 없이 프로그램 흐름 제어 및 DB 연동이 가능한 것을 확인했다.
다음 JSTL에서 <sql:query>문을 사용해서 DB 테이블의 내용을 가져오는 부분이다. 코드가 간결하여 프로그램을 한눈에 이해하기 쉽다.

<sql:query var="rs" dataSource="jdbc/jsptest">
	SELECT * FROM member
</sql:query>

JSP 스크립트가 없으면 코드의 가동성이 좋아지는 것은 이미 JSTL을 통해 알고 있다. JSTL과 표현 언어 코드를 혼합해서 충분히 JSP의 스크립트들을 처리하는 것도 확인했다.
그런데 한 가지 문제가 있다. 우리는 자바빈에서 직접적으로 JSP 페이지에서 SQL 쿼리문을 작성하지 않고 프로그래밍 하도록 배웠다. 위의 코드는 JSP 페이지에서 직접 SQL 쿼리문을 사용하고 있다.
JSP 페이지에서 직접 SQL 쿼리문을 사용하지 않고 데이터 저장빈 및 연동빈을 사용해서 쿼리의 실행 결과만을 받는 태그는 없다. 만일 이런 작업을 수행하는 태그를 사용하고 싶다면
직접 커스텀 태그를 만들어 쓴다.

<db:memberlist>	<!-- member 테이블의 모든 레코드를 가져오는 커스텀 태그 -->

즉, 예를 들어 위와 같이 member 테이블의 모든 레코드를 가져오는 커스텀 태그를 직접 만들어 쓰면, 코드는 더욱 간결해지고 DB 연동 로직과 뷰도 분리할 수 있다.
커스텀 태그를 이용하면 JSTL과 EL을 사용하지 않고도 자신만의 태그를 작성할 수 있다. 이렇게 사용자가 정의한 자신만의 커스텀 태그를 모아놓은 것을 커스텀 태그 라이브러리라 한다.

	- 커스텀 태그의 장점
	
-	한 번 작성한 커스텀 태그는 언제든지 필요한 곳에서 재사용이 가능하다. 또한 다른 사용자에게 배포하여(package) 재사용될 수 있다.
-	커스텀 태그는 프로그램의 가독성을 향상시킨다. 수백 라인의 페이지에서 가독성은 프로그램의 이해를 쉽게 해주는 중요 요소이다.
-	커스텀 태그는 JSP의 스크립트를 사용하지 않으므로 자바 문법에 덜 의존적이다. 그래서 JSP 페이지의 작성이 보다 쉽다.
-	로직과 뷰의 분리로 디자이너와 프로그래머가 각자의 일을 분담할 수 있으므로 효율적인 작업이 가능하다.

커스텀 태그를 작성하는 방법에는 자바 클래스 파일을 사용하는 것과 태그 파일을 사용하는 방법이 있다.
자바 클래스 파일을 사용하는 방법은 자바 언어 자체를 전혀 모르면 조금 어렵고, 잘 정의된 사용자 태그를 개발하려면 많은 노력과 시간이 필요하다. 
그러나 JSP 2.0 기반에서 추가로 제공되는 태그 파일을 사용하는 방법은 자바 언어를 몰라도 간편하게 커스텀 태그를 작성할 수 있다.