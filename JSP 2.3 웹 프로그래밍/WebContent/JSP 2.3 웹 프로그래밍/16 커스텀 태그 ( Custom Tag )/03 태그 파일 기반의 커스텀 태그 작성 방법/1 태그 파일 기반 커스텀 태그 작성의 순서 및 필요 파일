이 방식을 사용하려면 태그의 로직을 기술하는 태그 파일(.tag) 파일을 작성하여, 태그 라이브러리 사용하는 JSP 페이지가 필요하다.
태그 파일로 커스텀 태그를 작성하는 것은 JSP 2.0 기벤에서 제공하는 방법이다. 이 방법은 커스텀 태그를 정의한 태그 파일을 생성한 후 JSP 페이지에서 해당 태그 파일을 사용한다.
커스텀 태그당 파일이 1개이다.


(1) 작성 순서

자바 클래스 파일 기반의 태그 라이브러리를 사용하는 커스텀 태그를 작성해야 할 경우 필요한 파일들의 작성 순서는 다음과 같다.

		
	태그를 정의한 파일				
	태그당 tag 파일이 1개			커스텀 태그 사용

					←
	태그 파일 (.tag)			JSP 페이지
					→

					
1 커스텀 태그를 정의하는 태그 파일을 작성한다.

2 JSP 페이지에서 해당 커스텀 태그를 사용한다.


(2) 필요 파일 및 위치

	-	태그 파일 : 커스텀 태그를 정의한 파일로 커스텀 태그 파일 1개가 매핑된다. 파일의 위치는 실제 서비스 환경에서는 [웹 애플리케이션 폴더] - [WEB-INF] - [tags] 폴더 안에 위치하고,
				이클립스 가상 환경에서는 [프로젝트] - [WebContent] - [WEB-INF] - [tags] 내에 위치한다.
				
	- JSP 페이지 : 해당 커스텀 태그를 사용하는 JPS 페이지이다. 파일의 위치는 실제 서비스 환경에서는 [웹 애플리케이션 폴더] 안에 위치하고,
				이클립스 가상환경에서는 [프로젝트] - [WebContent]에 위치한다.
				
자바 클래스 파일에 비해 필요 파일이나 작성 단계가 간소하다는 것을 알 수 있다. 또한 자바에 익숙하지 않는 경우 자바 클래스로 커스텀 태그를 만드는 것은 고역이다. 그에 비해 태그 파일은
JSP 페이지를 작성하는 것과 같은 방식으로 만들기 때문에 작성하는 것도 간편하다.
태그 파일과 JSP 페이지의 차이점은 태그 파일은 파일 확장자가 .tag이고 ,<%@ page %> 디렉티브 대신 <%@ tag %> 디렉티브를 사용한다는 것이다.
또한 태그 파일에서만 쓸 수 있는 디렉티브를 사용해서 입력과 출력을 선언한다. 사실 태그 파일은 내부적으로 사용될 때 태그 핸들러(자바 커스텀 태그 클래스)로 변환되어 처리된다.
JSP 페이지가 서블릿으로 변환되는 것처럼 말이다. 따라서 우리는 더 이상 태그 핸들러를 작성할 필요 없이 태그 파일을 만들면 나머지는 시스템이 알아서 처리를 해준다.

	