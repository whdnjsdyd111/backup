웹 사이트를 구축하다 보면 작성해야 하는 페이지가 너무 방대해서 질렸던 기억이 있을 것이다. 필자도 그럴듯한 사이트를 구축하기 위해서 많은 작업이 필요하구나 싶어 놀랐다.
일단 로직을 빼고 회면에 표출해야 하는 페이지만을 놓고 봐도 마찬가지이다.

보통 사이트의 상단에는 5~6개 정도의 주 메뉴가 있고, 그 주 메뉴는 각각 적게는 3개에서 많게는 8~9개 정도의 부 메뉴를 가지고 있다. 각 부 메뉴의 항목은 각각의 페이지로 매핑될 수도 있으나
그렇지 않은 경우 다시 한 번 하위 메뉴가 나타난다. 여기에 게시판이나 다른 기능을 추가하면 작성해야 하는 페이지의 수가 실로 엄청나다는 것을 알 수 있다.
뿐만 아니라 우리가 보는 웹 페이지 화면은 한 개의 페이지로 이루어진 것이 아니라 거의 대부분 여러 개의 페이지로 이루어져 있다.
물론 이것을 혼자서 모두 작성하지 않고 팀과 함께 작성한다. 우리가 생각해볼 문제는 여러 명이 함께 작업할 때 페이지의 통일성을 어떻게 유지해야 하는가이다.
이것은 템플릿 페이지를 작성해서 유지한다. 그리고 방대한 웹 사이트의 페이지들은 중복되는 부분이 있는데 이것은 따로 페이지로 만들어서 필요할 때마다 호출해서 사용한다.
중복되는 페이지의 호출은 include 액션 태그를 사용한다. 그래서 include 액션 태그를 페이지의 모듈화라고 불렀던 것이다.
그러면 중복되는 페이지를 모듈화해서 사용하는 이점에 대해 알아보자. 웹 사이트의 페이지들은 기본적으로 다음과 같은 구조를 갖는 경우가 많다.


			┌───────────────────────────────────┐
			│				상단					│
			└───────────────────────────────────┘
			┌───┐┌──────────────────────────────┐
			│	││								│
			│ 좌	││								│
			│ 측	││			내용					│
			│ 메	││								│
			│ 뉴	││								│
			│	││								│
			└───┘└──────────────────────────────┘
			┌───────────────────────────────────┐
			│				하단					│
			└───────────────────────────────────┘
			

위 그림과 같이 보통 상단에는 로고를 포함한 메뉴, 좌측에 메뉴(하위 메뉴 포함), 중앙에 내용, 하단에는 회사 소개 및 찾아오는 길과 보안 정책 등의 내용을 포함하고 있다.
그리고 상단, 좌측 메뉴, 하단 같은 내용을 표시해야 하는 경우가 많고, 주로 중앙의 내용만 계속 바뀌게 된다. 즉 같은 구조를 계속 유지하고 있다는 것이다.
이러한 구조는 <table> 태그나 HTML5의 문서 구조를 사용해서 작성한다. 여기서는 <table> 태그를 사용하여 템플릿 페이지를 작성하는 방법을 학습하고,
HTML5를 사용한 작성법은 Section 04 에서 학습한다.


		<table> 태그를 사용한 경우					HTML5의 문서 구조를 사용한 경우
		
<table>										<header>
	<tr>										<nav>상단</nav>
		<td colspan="2">상단</td>				</header>
	</tr>									<div id="leftMenu">
	<tr>										좌측
		<td>좌측</td>							</div>
		<td>중앙의 내용</td>					<section id="content">
	</tr>										중앙의 내용
	<tr>									</section>
		<td colspan="2">하단</td>				<footer>
	</tr>										하단
</table>									</footer>


각각 상단, 좌측, 하단은 같은 페이지를 유지하고 중앙의 내용만 바뀌는 것은 <jsp:include> 액션 태그를 사용하면 된다.
<table> 태그를 사용한 예시는 다음과 같다.


<table>
	<tr>
		<td colspan="2"><jsp:include page="top.jsp" flush="false"></td>	
	</tr>
	<tr>
		<td><jsp:include page="left.jsp" flush="false" /></td>	
		<td><jsp:include page="<%= content %>" flush="false" /></td>
	</tr>
	<tr>
		<td colspan="2"><jsp:include page="bottom.jsp" flush="false" /></td>	
	</tr>
</table>
	
	
중앙의 내용은 페이지마다 바뀌므로 <jsp:include page="<%= content %>" flush="false" /> 처럼 page의 속성값을 표현식을 사용해서 그때그때 표시되는 페이지를 변동시킬 수 있다.
만일 좌측의 메뉴도 경우에 따라 다르다면 같은 방법을 사용할 수 있다. 페이지의 중복 부분을 모듈화하는 방법을 살펴보았다. 페이지를 모듈화하는 것은 정작 살펴보았지만 "왜 모듈화를 하면 좋은가?" 라는 가장 중요한 것을 설명하지 않았다.
그것은 사이트의 유지 보수가 쉬워진다는 것이다. 웹 사이트를 구축하고 나면 그것으로 작업이 끝나는 일은 거의 없다. 사이트 개편이니, 리뉴얼이니 해서 자주 뒤엎는다. 특히 10 ~ 20대를 타깃으로 하는 사이트는
시즌마다 뒤엎는 경우가 많다. 이 경우 모든 페이지를 바꾸어야 한다면 끔찍할 것이다.
모듈화된 페이지를 모쥴화하면 중복되는 페이지만 수정해도 모든페이지가 수정된 것과 같은 효과를 준다. 즉, 사이트의 유지 보수가 쉬워진다. 이것이 페이지를 모듈화 하는 가장 큰 이유 중 하나이다.


이 예제는 템플릿 페이지를 작성하고 include 액션 태그를 사용해서 페이지를 모듈화하는 것이다. main.jsp 페이지를 실행하면 template.jsp 페이지로 프로그램의 흐름이 이동한다.
template.jsp 페이지는 템플릿의 구조만 가지고 있으며, 각각의 내용은 include 액션 태그를 사용해서 포함시킨다.

main.jsp		184쪽

template.jsp	184쪽

top.jsp			186쪽

left.jsp		186쪽

bottom.jsp		186쪽

content.jsp		186쪽