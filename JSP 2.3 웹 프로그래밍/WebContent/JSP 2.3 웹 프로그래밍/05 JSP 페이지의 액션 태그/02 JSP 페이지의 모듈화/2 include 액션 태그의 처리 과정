include 액션 태그의 처리 과정은 다음과 같다.

						┌───────────────────┐
						│		a.jsp		││ 2
				요청 1	│					││	  3		┌───────────┐
┌───────────┐───────>	│	a.jsp 코드		│V ─────> 	│ 	b.jsp	│
│  웹 브라우저	│			│		...			│  5	  │	│  ...		│
└───────────┘<───────	│ <jsp:include page=│<─────── V	│ b.jsp 코드	│
				응답 7	│ "b.jsp" flush=	││			└───────────┘
						│ "false" />		││ 6
						└───────────────────┘V
						

1 	웹 브라우저가 a.jsp 페이지를 웹 서버에 요청한다.

2 	서버는 요청받은 a.jsp 페이지를 처리하는데, a.jsp 페이지 내에서 출력 내용은 출력 버퍼에 저장하는 등의 작업을 처리한다.

3	이때 <jsp:include page="b.jsp" flush="false" /> 문장을 만나면 하던 작업을 멈추고 프로그램 제어를 b.jsp 페이지로 이동시킨다.

4	b.jsp 페이지를 처리한다. b.jsp 페이지는 페이지 내에 출력 내용을 출력 버퍼에 저장한다.

5	b.jsp 페이지의 처리가 끝나면 a.jsp 페이지로 프로그램의 제어가 이동하는데, 이동 위치는 <jsp:include page="b.jsp" flush="false" /> 문장의 다음 행이 된다.

6	a.jsp 페이지의 나머지 부분을 처리한다. 출력할 내용이 있으면 출력 버퍼에 저장한다.

7	출력 버퍼의 내용을 웹 브라우저로 응답한다.


include 액션 태그는 같은 request 기본 객체를 공유하므로, 위의 그림에서 a.jsp와 b.jsp는 같은 request 기본 객체를 공유한다.
원래 request 객체는 각 요청에 따라 각각 개별적으로 생성되나, include 액션 태그를 사용한 a.jsp 페이지의 request 객체와 b.jsp 페이지의 request 객체는 같은 객체이다.

							┌───────────────────────────────────────────────┐
							│					a.jsp						│
			요청(request)		│  <% request.setCharacterEncoding("utf-8"); %>	│
┌───────────┐───────────>	│	<jsp:include page="b.jsp" flush="false" />	│
│  웹 브라우저	│				└───────────────────────────────────────────────┘		a.jsp의 request 객체와 b.jsp의 request 객체는 같음
└───────────┘<──────────	┌───────────────────────────────────────────────┐
			응답(response)	│					b.jsp						│
							│  <% request.setCharacterEncoding("utf-8"); %>	│
							│					...							│
							└───────────────────────────────────────────────┘
							

이 예제는 include 액션 태그를 사용해 페이지의 포함 관계 및 request 객체 공유를 확인하는 것이다. 이름과 포함할 페이지를 입력 받는 폼은 includeTestForm.jsp가 제공하고, include 액션 태그를
가지고 다른 페이지의 실행 결과를 가져오는 작업은 includeTest.jsp 페이지가 담당한다. 그리고 includeTest.jsp 페이지로 실행 결과가 포함되는 페이지는 includeㅇTest.jsp이다.

includeTestForm.jsp		175쪽

includeTest.jsp			177쪽

includedTest.jsp		178쪽