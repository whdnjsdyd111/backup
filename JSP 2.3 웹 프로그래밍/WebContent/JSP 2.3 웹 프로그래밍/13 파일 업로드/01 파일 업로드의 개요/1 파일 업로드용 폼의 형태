파일 업로드를 위한 폼은 method가 "post"이고, enctype이 "multiple/form-data"를 가져야 한다.
폼의 속성을 사용해서 지정할 수 있으며, 기본적인 <form> 태그의 속성을 사용하는 방법, <input type="submit"> 에서 별도의 속성을 지정하는 방법, 자바스크립트에서 지정하는 방법이 있다.


(1) 방법1 : 기본적인 <form> 태그의 속성을 사용하는 방법

가장 기본적인 파일 업로드 폼을 작성하는 방법은 <form> 태그의 method 속성의 값을 "post", enctype 속성의 값은 "multiple/form-data"로 지정한다.

<form name="formName" method="post" enctype="multiple/form-data">

	- method 속성 :	서버에 요청 방식을 지정하는 것으로 생략이 가능하며, 생략 시 기본값 get을 사용한다. 파일을 업로드할 때는 이 속성을 생략할 수 없으며, 반드시 post로 지정해야 한다.
	- enctype 속성 : 	서버에 폼 데이터를 전송 시 인코딩 방식을 지정하는 것으로 생략 가능하다. 생략 시 기본값 application/x-www-form-urlencoded로 지정되어 공백은 '+'로,
					특수문자는 아스키 16진수(ASCII HEX)로 변경된 후 전송된다. 이 속성의 값으로는 multiple/form-data, text/plain도 있다.
					mutipart/form-data는 전송 데이터를 인코딩하지 않으며 업로드할 때 사용한다. text/plain은 공백은 '+'로 변환하나 특수문자는 인코딩하지 않는다.
					또한 파일을 업로드하기 위해 파일을 입력받으며, 이때 <input> 태그의 type 속성값을 "file"로 지정한다.
					
<input type="file" name="selectfile">

웹 브라우저의 종류에 따라 파일 입력 형태는 여러가지로 표시된다.
다음은 파일을 입력받아 업로드하기 위해서 필요한 폼 태그와 input 태그를 지정한 예시이다.

<form name="formName" method="post" action="upPro.jsp" enctype="multipart/form-data">
	<input type="text" name="title">
	<input type="file" name="selectfile">
	<input type="submit" value="전송">
</form>


(2) 방법2 : <input type="submit"> 에서 별도의 속성을 지정하는 방법

파일 업로드 폼을 만들기 위한 다른 방법으로는 <input type="submit">에 HTML5에서 새로 추가된 formenctype, fommethod 속성을 사용하는 것이다.
formmethod="post", formenctype="multipart/form-data"와 같이 지정한다. 이 속성들은 <form> 태그의 method, enctype 속성값을 재정의(재설정)한다.

<form action="upPro.jsp">
	<input type="text" name="title">
	<input type="file" name="selectfile">
	<input type="submit" value="전송" >
	<input type="submit" formmethod="post" formenctype="multipart/form-data" value="업로드 전송">
</form>

위의 예시를 보면 <form> 태그의 method의 enctype 속성을 지정하지 않았기 때문에 method="get", enctype="application/x-www-form-urlencoded"로 전송데이터가 upPro.jsp 페이지에 전송된다.
그러나 [업로드 전송] 버튼을 클릭하면 <form> 태그의 method와 enctype 속성을 formmethod="post", formenctype="multipart/form-data"를 사용하여 재정의해서
method는 post 방식으로, enctype은 multipart/form-data로 전송 데이터가 upPro.jsp 페이지에 전송된다.


(3) 방법3 : Ajax 기반의 자바스크립트에서 작성

앞의 두 가지 방법은 JSP 페이지에서 서버에 요청을 보내는 방식이었고, 세 번째는 Ajax 기반의 파일을 업로드하기 위해 자바스크립트에서 서버 요청을 하는 방식이다.
즉, 자바스크립트에서 jQuery를 사용하여 파일 업로드 페이지를 요청하는 방식이다.
Ajax 방식으로 파일을 업로드하려면 jQuery From Plugin(제이쿼리 폼 플러그인)을 다운로드하여 사용하거나 $.ajax() 메소드에 FormData를 생성한다.
그런데 $.ajax() 메소드에 FormData를 생성해서 사용하는 방식은 IE 웹 브라우저의 경우 10 이상에서만 가능하다. 따라서 웹 브라우저 버전에 상관없는 jQuery Form Plugin 사용을 권장한다.


		HTML

<script src="jquery-1.11-0.min.js"></script>
<script src="juqery.form.min.js"></script>

<form id="formid" method="post" action="upPro.jsp" enctype="multipart/form-data">
	<input type="text" name="title">
	<input type="file" name="selectfile">
</form>
<div id="upResult"></div>

		JS
		
$('#formid').ajaxForm({	// 저장한 upPro.jsp 페이지에 폼 데이터 전송
	success : function(data, status) {
		$('#result').html(data);	// 결과 처리
	}
});


	-	HTML 태그 : 	<script src="jquery.form.min.js"></script>와 같이 <script> 태그를 추가해서 jQuery Form Plugin을 사용한다.
					이 플러그인은 Ajax 기반이더라도 <form> 태그에 method="post", enctype="multipart/form-data"를 지정하고 
					<input type="submit">과 같이 버튼을 submit으로 지정해야 한다.

	-	자바스크립트(JS) : 	$('#폼').ajaxForm(); 과 같이 form 엘리먼트 객체에 ajaxForm() 메소드를 사용해 지정한 페이지로 폼 데이터를 저장한다.
						이때 form 엘리먼트 객체는 $('#폼Id')로 얻어낸다. 폼 데이터를 전송한 후 결과를 받아야하는 경우에는 ajaxForm() 메소드에
						success : function(data, status) {}를 사용해서 처리한다.
						

위의 예시에서 [전송] 버튼을 클릭하면 method는 post 방식, enctype은 multipart/form-data로 전송 데이터가 비동기적으로 upPro.jsp 페이지에 전송된다.
jQuery Form Plugin의 좀더 자세한 설명은 'http://malsup.com/jquery/form/' 사이트를 참고한다.