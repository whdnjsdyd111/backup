표현 언어의 작성 방법은 간단하다. 표현 언어의 표현식은 숫자, 문자열, boolean 값 및 null 같은 상수값(리터럴)들도 포함할 수 있다.
표현 언어는 $와 표현식 그리고 {}를 사용해서 표현한다.

	- 표현 언어는 항상 '${' 로 시작해서 '}'로 끝난다. 
	
${num} <%-- num 변수값 출력 --%>

위의 ${num}은 <%= num %>와 결과가 같으며 <%= %>를 대체하는 효과가 있다. 표현 언어의 표현식(${})은 JSP 스크립트인
<% %>, <%! %>, <%= %> 안에서는 사용할 수 없다. 그 외의 곳에서는 사용 가능하다.

	- 표현 언어의 표현식 안에 연산식도 쓸 수 있다.
	
num 변수값에 1을 더하는 표현 언어 표현식

${num + 1}	<%-- num 변수 값에 1을 더한 후 출력 --%>

자바빈의 num 프로퍼티 값에 1 을 더하는 표현 언어 표현식

${article.num + 1} <%-- article 객체의 num에 1 값을 더한 후 출력 --%>

프로퍼티 접근 연산자 닷(dot(.))은 자바빈이나 컬렉션 객체에서 닷(.) 다음에 오는 이름과 같은 프로퍼티를 찾는다.

	- 표현 언어 표현식에는 브라켓 연산자(bracket([]) operator)를 사용할 수 있다.
	
브라켓 연산자(bracket([]) operator)는 배열의 형태로 객체의 프로퍼티에 접근하는 것을 제공한다. ${article.num + 1}과 같이 자바빈의 프로퍼티 num의 값에 1을 더하는 예시는 닷(.) 연산자 대신
브라켓 연산자(bracket([]) operator)를 사용해서 아래와 같이 표시할 수 있다.

${article['num'] + 1}
또는
${article["num"] + 1}

브라켓([]) 안의 값은 프로퍼티의 이름을 나타내는 문자열 또는 프로퍼티 이름을 값으로 가진 변수가 올 수 있다.
이때 프로퍼티 혹은 변수명은 큰따옴표("")나 작은 따옴표('')로 둘러싼다.

	- 표현 언어는 동적으로 값을 받도록 JSTL이나 커스텀 태그의 JSP 액션의 속성값을 지정할 때도 사용할 수 있다.
	
<c:out value="${article.num + 1}" />

위의 예시는 JSTL의 문법으로 화면에 article 객체의 num 프로퍼티 값에 + 1을 한 값을 출력한다.