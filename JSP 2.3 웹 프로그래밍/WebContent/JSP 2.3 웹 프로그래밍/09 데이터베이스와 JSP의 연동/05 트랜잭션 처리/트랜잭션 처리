트랜잭션은 여러 단계의 작업을 하나로 처리하는 것으로, 하나로 인식된 작업이 모두 성공적으로 끝나면 commit되고, 하나라도 문제가 발생하면 rollback되어서 작업을 수행하기 전단계로
모든 과정이 회수된다. 이것이 트랜잭션이다. 즉, 트랜잭션은 프로그램의 신뢰도를 보장하게 된다.

실제로 트랜잭션이 적용되어 처리되는 부분은 많으나 쉽게 볼 수 있는 것 중의 하나가 쇼핑몰의 장바구니 부분이다.
쇼핑몰에서 우리가 쇼핑을 할 때, 장바구니에서 구매할 물건을 선택해 신용카드의 결제까지 정상적으로 끝나야만 구매가 정상적으로 일어난다.
그러나 변심해서 구매 부분의 신용카드 결제를 취소하는 순간 다시 처음으로 복귀되어 장바구니에 물건이 그대로 남아 있는 상태가 된다. 이것이 트랜잭션에 의해 구매 과정의 신뢰도를 보장하기 위한 것이다.

JSP에서 제공하는 트랜잭션 처리에 대한 메소드에는 commit(), rollback() 메소드가 있다.
JDBC API의 Connection 객체가 제공한다. commit()는 트랜잭션의 commit을 수행하고, rollback() 메소드는 트랜잭션의 rollback을 수행한다.
기본적으로 Connection 객체에 setAutoCommit(boolean autoCommit)이란 메소드가 있는데 기본값이 true로 설정되어 있다.
기본적으로 JSP는 오토커밋(AutoCommit)이다. 그래서 우리가 지금까지 작성한 쿼리문이 오토커밋(AutoCommit)에 의해 자동으로 수행되었던 것이다. commit이 자동으로 수행되었던 것이다.
그러나 트랜잭션을 처리할 때는 오토커밋(AutoCommit)이 일어나서 자동으로 commit을 사용하면 안된다. 여러 개의 쿼리 문장이 하나의 작업으로 수행되어야 하므로
JSP의 오토커밋(AutoCommit)이 자동으로 작동되지 못하게 해야 한다. 오토커밋(AutoCommit)이 자동으로 작동되지 못하게 하려면 setAutoCommit(false);로 지정해야 한다.
