package 챕터06_클래스;

public class ㅋ_FinalFieldAndConstant {
	// final의 의미는 최종적이란 뜻을 지니고 있다. 그래서 final 필드란 초기값이 저장된 필드는 최종적인 값이 되어 프로그램 실행 도중에 수정할 수 없다는 것이다.
	
	//	final 타입 필드 [= 초기값];
	
	// final 필드의 초기값을 줄 수 있는 방법은 두가지가 있다. 첫 번째는 필드 선언 시에 주는 방법이고, 두 번째는 생성자에서 주는 방법이다.
	// 단순 값이라면 필드 선언 시에 주는 것이 제일 간단하다. 하지만 복잡한 초기화 코드가 필요하거나 객체 생성 시에 외부 데이터로 초기화해야 한다면 생성자에서 초기값을 지정해야 한다.
	// 생성자는 final 필드의 최종 초기화를 마쳐야 하는데, 만약 초기화되지 않은 final 필드를 그대로 남겨두면 컴파일 에러가 발생한다.
	// 다음예제 Person을 살펴보자.
	
			// Constant (static final)	상수(static final)
	
	// 일반적으로 불변의 값을 상수라고 부른다. 수학에서는 원주율 파이, 지구의 무게 및 둘레 등이 해당된다. 이런 불변의 값을 저장하는 필드를 자바에서는 상수라고 부른다.
	// final 필드는 한 번 초기화되면 수정할 수 없는 필드라고 했다. 그러면 final 필드는 상수인가? 아니다.
	// 왜냐면 불변의 값은 객체마다 저장할 필요가 없는 공용성을 띠고 있고, 여러 가지 값으로 초기화될 수 없기 때문이다.
	// final 필드는 객체마다 저장되고 생성자의 매개값을 통해 여러가지 값을 가질 수 있기 때문에 상수가 아니다.
	// 상수는 static 이면서 final이어야 한다. 객체마다 저장되지 않고, 클래스에만 포함된다. 그리고 한 번 초기값이 저장되면 변경할 수 없다.
	
	//	static final 타입 상수 [= 초기값];
	
	// 초기값이 단순 값이라면 선언 시에 주는 것이 일반적이지만 복잡한 초기화일 경우 정적 블록을 사용할 수 있다.
	
	//	static final 타입 상수;
	//	static {
	//		상수 = 초기값;
	//	}
	
	// 상수 이름은 모두 대문자로 작성하는 것이 관례이다. 만약 다른 단어들이 혼합한다면 언더바(_)로 단어들을 연결해준다.
	
	//	static final double PI = 3.14159;
	//	static final double EARTH_SURFACE_AREA;
	
	// 다음 Earth 예제를 살펴보자.
}
