package 챕터11_기본API클래스.하_Format클래스.ㄱ_숫자형식클래스DecimalFormat;

public class 숫자형식클래스 {
	// DecimalFormat은 숫자 데이터를 원하는 형식으로 표현하기 위해서 패턴을 사용하는데 다음 표는 패턴의 예를 보여준다.
	
	//	기호		의미						패턴 예				1234567.89 → 변환 결과
	
	//									0					1234568
	//	0		10진수(빈자리는 0으로 채움)		0.0					1234567.9
	//									0000000000.00000	0001234567.89000
	
	//									#					1234568
	//	#		10진수(빈자리는 채우지 않음)		#.#					1234567.9
	//									##########.#####	1234567.89
	
	//	.		소수점					#.0					1234567.9
	
	//									+#.0				+1234567.9
	//	-		음수 기호					-#.0				-1234567.9
	
	//	,		단위 구분					#,##.0				1,234,567.9
	
	//	E		지수 문자					0.0E0				1.2E6
	
	//			양수와 음수의 패턴을 모두 기술할						+1,234,568 (양수일 때)
	//	;		경우, 패턴 구분자				+#,### ; -#,###		-1,234,568 (음수일 때)
	
	//	%		100을 곱한 후에 % 문자 붙임		#.# %				123456789 %
	
	//	\u00A4	통화 기호					\u00A4 #,###		￦ 1,234,568
	
	
	// 적용할 패턴을 선택했다면 DecimalFormat 생성자 매개값으로 지정해서 객체를 생성하면 된다.
	// 그리고 나서 format() 메소드를 호출해서 패턴이 적용된 문자열을 얻으면 된다.
	
	//	DecimalFormat df = new DecimalFormat("#,###.0");
	//	String result = df.format(1234567.89);
}
